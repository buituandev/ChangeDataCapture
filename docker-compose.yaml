services:
  spark-master:
    container_name: spark-master
    deploy:
        resources:
            limits:
              cpus: '1'
              memory: "2g"
    image: bitnami/spark:3.4.1
    ports:
      - "4040:4040"
      - "7077:7077"
      - "8080:8080"
      - "18080:18080"
    networks:
      - vbo
    volumes:
      - ./spark:/opt/spark
    command: sh /opt/spark/spark-master.sh

  spark-worker:
    deploy:
        resources:
            limits:
              cpus: '1'
              memory: "2g"
    image: bitnami/spark:3.4.1
    depends_on:
      - spark-master
    ports:
      - "8081-8089:8081"
    networks:
      - vbo
    volumes:
      - ./spark:/opt/spark
    command: sh /opt/spark/spark-worker.sh
  spark-client:
    container_name: spark-client
    deploy:
        resources:
            limits:
              cpus: '1'
              memory: "2g"
    build: spark_client
    ports:
      - "8888:8888"
      - "4041:4040"
    networks:
      - vbo
    volumes:
      - ./spark_client/src:/opt/src
    command: sleep infinity

# S3 compatible object storage: MinIO
  minio:
    container_name: minio
    image: "minio/minio:RELEASE.2025-02-07T23-21-09Z"
    volumes:
      - minio:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - vbo
    environment:
      MINIO_ACCESS_KEY: "12345678"
      MINIO_SECRET_KEY: "12345678"
    command: server /data --console-address ":9001"
    
  zookeeper:
    image: quay.io/debezium/zookeeper:3.1
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
    networks:
      - vbo

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.4.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    extra_hosts:
     - "localhost:host-gateway" 
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      CONFLIENT_METRICS_ENABLE: 'false'
      PORT: 9021
    networks:
      - vbo

  kafka:
    container_name: kafka
    image: quay.io/debezium/kafka:3.1
    ports:
     - 9092:9092
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181
    networks:
      - vbo

  postgres:
    container_name: postgres
    image: quay.io/debezium/example-postgres:3.1
    ports:
     - 5433:5432
    environment:
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    networks:
      - vbo
  connect:
    container_name: connect
    image: debezium/connect:2.7.3.Final
    ports:
     - 8083:8083
    hostname: connect
    depends_on:
     - kafka
     - postgres
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - CONNECT_REST_ADVERTISED_HOST_NAME=connect
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
     - KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
     - VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
     - ENABLE_DEBEZIUM_SCRIPTING=true
    networks:
      - vbo

# Debezium UI
  debezium-ui:
    container_name: ui
    image: debezium/debezium-ui:latest
    ports:
     - 8085:8080
    depends_on:
      - connect
    environment:
     - KAFKA_CONNECT_URI=http://connect:8083
    extra_hosts:
     - "localhost:host-gateway" 
    networks:
      - vbo

volumes:
  minio:
  postgres-db-volume:

networks:
  vbo: 